        -:    0:Source:/mnt/c/Users/White Fox/Downloads/l4/l4/main.c
        -:    0:Graph:/mnt/c/Users/White Fox/Downloads/l4/l4/cmake-build-debug-coverage/CMakeFiles/l4.dir/main.c.gcno
        -:    0:Data:/mnt/c/Users/White Fox/Downloads/l4/l4/cmake-build-debug-coverage/CMakeFiles/l4.dir/main.c.gcda
        -:    0:Runs:1
        -:    1:/*
        -:    2:
        -:    3:Solution written by
        -:    4:Ilovan Cristian Daniel
        -:    5:
        -:    6:*/
        -:    7:
        -:    8:#include "tests.h"
        -:    9:#include "ui.h"
        -:   10:#include "repository.h"
        -:   11:
        -:   12:/*
        -:   13:
        -:   14:Cerinte generale
        -:   15:
        -:   16:Creati o aplicatie modulara in C.
        -:   17:Se cere interfata utilizator de tip consola.
        -:   18:Datele introduse de utilizator trebuie validate. 
        -:   19:Folositi athitectura stratificata.
        -:   20:Folositi dezvoltare dirijata de teste (Test Driven Development)
        -:   21:Fiecare metoda din aplicatie trebuie specificat si testat.
        -:   22:Implementati vector dinamic pentru lucru cu liste:
        -:   23:    - in prima saptamana puteti folosi reprezentarea cu un struct ( un vector static si lungime in el)
        -:   24:    - pana in saptamana 2 trebuie folosit alocare dinamica (sa acomodeze oricate elemente)
        -:   25:Timp de lucru 2 saptamani.
        -:   26:
        -:   27:8 Magazin electronice
        -:   28:
        -:   29:Creati o aplicatie care permite gestiunea stocului de produse intr-un magazin de electronice.
        -:   30:Fiecare produs are un identificator unic, tip (laptop, frigider, televizor,etc), producator, model,
        -:   31:pret, cantitate.
        -:   32:Aplicatia permite:
        -:   33: a) Adaugarea de noi produse. Daca produsul este deja in stoc trebuie actualizat cantitatea
        -:   34: b) Actualizare produse (modificare pret sau cantitate)
        -:   35: c) Stergere produs
        -:   36: d) Vizualizare produse din stoc, ordonat dupa pret, cantitate (crescator/descrescator)
        -:   37: e) Vizualizare lista de produse filtrate dupa un criteriu (producator, pret, cantitate)
        -:   38:
        -:   39:*/
        -:   40:
function main called 1 returned 100% blocks executed 100%
        1:   41:int main()
        -:   42:{
        -:   43:	
        1:   44:	test();
        1:   44-block  0
call    0 returned 1
        -:   45:	
        -:   46:	Products p;
        1:   47:	productsConstructor(&p);
call    0 returned 1
        -:   48:	
        1:   49:	start(&p);
call    0 returned 1
        -:   50:	
        1:   51:	productsDestructor(&p);
call    0 returned 1
        -:   52:	
        1:   53:	return 0;
        -:   54:}
